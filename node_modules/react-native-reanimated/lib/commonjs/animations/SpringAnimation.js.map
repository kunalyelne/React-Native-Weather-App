{"version":3,"sources":["SpringAnimation.js"],"names":["withDefault","value","defaultValue","undefined","SpringAnimation","Animation","constructor","config","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","toValue","_delay","delay","stiffness","damping","mass","bounciness","speed","tension","friction","_stiffness","_damping","_mass","springConfig","SpringConfig","fromBouncinessAndSpeed","fromOrigamiTensionAndFriction","start","_clock","Clock","state","finished","AnimatedValue","position","time","stop","getDefaultState"],"mappings":"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","sourcesContent":["import AnimatedValue from '../core/InternalAnimatedValue';\nimport Animation from './Animation';\nimport SpringConfig from '../SpringConfig';\nimport spring from './spring';\n\nimport { block, clockRunning, startClock, stopClock, cond } from '../base';\nimport Clock from '../core/AnimatedClock';\n\nimport invariant from 'fbjs/lib/invariant';\n\nfunction withDefault(value, defaultValue) {\n  if (value === undefined || value === null) {\n    return defaultValue;\n  }\n  return value;\n}\n\nexport default class SpringAnimation extends Animation {\n  constructor(config) {\n    super();\n\n    this._overshootClamping = withDefault(config.overshootClamping, false);\n    this._restDisplacementThreshold = withDefault(\n      config.restDisplacementThreshold,\n      0.001\n    );\n    this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);\n    this._initialVelocity = withDefault(config.velocity, 0);\n    this._lastVelocity = withDefault(config.velocity, 0);\n    this._toValue = config.toValue;\n    this._delay = withDefault(config.delay, 0);\n\n    if (\n      config.stiffness !== undefined ||\n      config.damping !== undefined ||\n      config.mass !== undefined\n    ) {\n      invariant(\n        config.bounciness === undefined &&\n          config.speed === undefined &&\n          config.tension === undefined &&\n          config.friction === undefined,\n        'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one'\n      );\n      this._stiffness = withDefault(config.stiffness, 100);\n      this._damping = withDefault(config.damping, 10);\n      this._mass = withDefault(config.mass, 1);\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      // Convert the origami bounciness/speed values to stiffness/damping\n      // We assume mass is 1.\n      invariant(\n        config.tension === undefined &&\n          config.friction === undefined &&\n          config.stiffness === undefined &&\n          config.damping === undefined &&\n          config.mass === undefined,\n        'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one'\n      );\n      const springConfig = SpringConfig.fromBouncinessAndSpeed(\n        withDefault(config.bounciness, 8),\n        withDefault(config.speed, 12)\n      );\n      this._stiffness = springConfig.stiffness;\n      this._damping = springConfig.damping;\n      this._mass = 1;\n    } else {\n      // Convert the origami tension/friction values to stiffness/damping\n      // We assume mass is 1.\n      const springConfig = SpringConfig.fromOrigamiTensionAndFriction(\n        withDefault(config.tension, 40),\n        withDefault(config.friction, 7)\n      );\n      this._stiffness = springConfig.stiffness;\n      this._damping = springConfig.damping;\n      this._mass = 1;\n    }\n\n    invariant(this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(this._damping > 0, 'Damping value must be greater than 0');\n    invariant(this._mass > 0, 'Mass value must be greater than 0');\n  }\n\n  start(value) {\n    this._clock = new Clock();\n    const state = {\n      finished: new AnimatedValue(0),\n      velocity: new AnimatedValue(this._initialVelocity),\n      position: value,\n      time: new AnimatedValue(0),\n    };\n\n    const config = {\n      damping: this._damping,\n      mass: this._mass,\n      stiffness: this._stiffness,\n      toValue: this._toValue,\n      overshootClamping: this._overshootClamping,\n      restSpeedThreshold: this._restSpeedThreshold,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n    };\n\n    return block([\n      cond(clockRunning(this._clock), 0, [startClock(this._clock)]),\n      spring(this._clock, state, config),\n      cond(state.finished, stopClock(this._clock)),\n    ]);\n  }\n\n  stop() {\n    // this._finished && this._finished.setValue(1);\n  }\n\n  static getDefaultState() {\n    return {\n      position: new AnimatedValue(0),\n      finished: new AnimatedValue(0),\n      velocity: new AnimatedValue(0),\n      time: new AnimatedValue(0),\n    };\n  }\n}\n"]}